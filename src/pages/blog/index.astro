---
import MainLayout from '../../layouts/MainLayout.astro';
import BlogCard from '../../components/BlogCard.astro';
import SearchBar from '../../components/SearchBar';
import { getCollection } from 'astro:content';

// Get all blog posts
let allPosts = await getCollection('blog');

// Sort posts by pubDate in descending order
allPosts = allPosts.sort((a: any, b: any) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf());

// Get unique tags
const allTags = [...new Set(allPosts.flatMap((post: any) => post.data.tags || []))];
---

<MainLayout title="Blog">
  <div class="container">
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-8">
      <h1 class="text-4xl font-bold">Blog</h1>
      <SearchBar client:load onSearch={(query) => {
        // The search will be handled client-side with JavaScript
        const searchInput = query.toLowerCase();
        const posts = document.querySelectorAll('.blog-post-card');
        
        posts.forEach(post => {
          const title = post.getAttribute('data-title')?.toLowerCase() || '';
          const description = post.getAttribute('data-description')?.toLowerCase() || '';
          const tags = post.getAttribute('data-tags')?.toLowerCase() || '';
          
          if (title.includes(searchInput) || description.includes(searchInput) || tags.includes(searchInput)) {
            post.classList.remove('hidden');
          } else {
            post.classList.add('hidden');
          }
        });
      }} className="w-full md:w-64" />
    </div>
    
    {allTags.length > 0 && (
      <div class="mb-8">
        <h2 class="text-sm font-medium mb-2">Filter by tag:</h2>
        <div class="flex flex-wrap gap-2">
          {allTags.map(tag => (
            <button
              class="tag-filter text-sm bg-muted hover:bg-muted/80 px-3 py-1 rounded-full"
              data-tag={tag}
            >
              {tag}
            </button>
          ))}
          <button
            class="tag-filter-reset text-sm text-primary hover:underline px-2"
          >
            Reset filters
          </button>
        </div>
      </div>
    )}
    
    <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {allPosts.map((post: any) => (
        <div 
          class="blog-post-card" 
          data-title={post.data.title}
          data-description={post.data.description}
          data-tags={(post.data.tags || []).join(',')}
        >
          <BlogCard
            title={post.data.title}
            description={post.data.description}
            pubDate={post.data.pubDate}
            slug={post.slug}
            heroImage={post.data.heroImage}
            tags={post.data.tags}
          />
        </div>
      ))}
    </div>
    
    {allPosts.length === 0 && (
      <div class="text-center py-12">
        <h3 class="text-2xl font-medium mb-4">No posts found</h3>
        <p class="text-muted-foreground">Check back soon for new content!</p>
      </div>
    )}
  </div>

  <script>
    // Handle tag filtering
    document.addEventListener('DOMContentLoaded', () => {
      const tagButtons = document.querySelectorAll('.tag-filter');
      const resetButton = document.querySelector('.tag-filter-reset');
      const posts = document.querySelectorAll('.blog-post-card');
      
      tagButtons.forEach(button => {
        button.addEventListener('click', () => {
          const tag = button.getAttribute('data-tag')?.toLowerCase();
          
          tagButtons.forEach(btn => btn.classList.remove('bg-primary', 'text-primary-foreground'));
          button.classList.add('bg-primary', 'text-primary-foreground');
          
          posts.forEach(post => {
            const tags = post.getAttribute('data-tags')?.toLowerCase() || '';
            
            if (tags.includes(tag as string)) {
              post.classList.remove('hidden');
            } else {
              post.classList.add('hidden');
            }
          });
        });
      });
      
      resetButton?.addEventListener('click', () => {
        tagButtons.forEach(btn => btn.classList.remove('bg-primary', 'text-primary-foreground'));
        posts.forEach(post => post.classList.remove('hidden'));
      });
    });
  </script>
</MainLayout>
